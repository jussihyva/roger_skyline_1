1. Download Ubuntu 18 (latest) ISO file
		https://ubuntu.com/download/server/thank-you?country=FI&version=18.04.4&architecture=amd64


2.  Crete new virtual machine
		- Use Virtualbox
		- Use the ISO file (Refer to step 1)


3. login to the server
		- ssh -l juhani -p 22 localhost


4. Set timezone

	ls -l /etc/localtime
	ls -l /etc/localtime
	sudo rm /etc/localtime
	sudo ln -s /usr/share/zoneinfo/Europe/Helsinki /etc/localtime

5. Verify disk size and partitions
	- df -BM
	- df -BMB
	- sudo fdisk -l

	Save result to folder V_1

6. Enable Root access
	- sudo passwd
	  password_for_root
	  exit

7. Create SW upgrade script

  su - root
  cat /root/apt-get_update_upgrade.sh
    date >> /var/log/update_script.log 2>&1
    sleep 60
    apt-get update -y >> /var/log/update_script.log 2>&1
    sleep 60
    date >> /var/log/update_script.log 2>&1
    apt-get upgrade -y >> /var/log/update_script.log 2>&1

8. Create crontab monitoring script

  su - root
  cat /root/crontab_monitoring.sh
  #!/bin/bash

  CRONTAB_MD5="/root/crontab_md5"
  CRONTAB_FILE="/var/spool/cron/crontabs/root"

  MD5=$(/usr/bin/md5sum $CRONTAB_FILE)

  if [ ! -f $CRONTAB_MD5 ]
  then
	echo "$MD5" > $CRONTAB_MD5
	exit 0;
  fi;

  if [ "$MD5" != "$(cat $CRONTAB_MD5)" ]
  then
	echo "$MD5" > $CRONTAB_MD5
	echo "$CRONTAB_FILE has been changed!" | mail -s "$CRONTAB_FILE was changed!" root@localhost
  fi;


9. Activate crontab
  crontab -l
  crontab -e
  @reboot     date ; bash ~/apt-get_update_upgrade.sh
  @reboot     /sbin/iptables-restore < /etc/iptables/rules.v4
  0 4 * * 6   date ; bash ~/apt-get_update_upgrade.sh
  0 0 * * *   date ; bash ~/crontab_monitoring.sh

10. Check mail
	su - root
	mail

11. Set static IP address

		- cat /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg

			juhani@rs1:~$ cat /etc/netplan/50-cloud-init.yaml
			network:
			ethernets:
				enp0s3:
				  addresses: [10.0.2.1/30]
				  gateway4: 10.0.2.2
				  nameservers:
					addresses: [10.51.1.253]
				  dhcp4: no
				enp0s8:
				  addresses: [10.13.200.133/16]
				  gateway4: 10.13.254.254
				  nameservers:
					addresses: [10.51.1.253]
				  dhcp4: no
			version: 2
			juhani@rs1:~$

			sudo netplan apply
			netstat -nr
			ip a

12. Copy SSH key to virtual Machine

		- ssh-copy-id -p 22 juhani@localhost


13. Set SSH access rights

		- sudo vim /etc/ssh/sshd_config

			Port 2222
			PermitRootLogin prohibit-password
			PasswordAuthentication no

		systemctl restart sshd

14. login to the server
		- ssh -l juhani -p 2222 localhost

15. Instll psad
	- sudo apt install psad
			local only

	systemctl start psad

16. Activate ufw
		sudo ufw status
		sudo ufw enable
		sudo ufw status
		sudo ufw allow 2222/tcp
		sudo ufw allow 443/tcp
		sudo ufw default deny incoming

17. Set iptables

	sudo iptables -P INPUT ACCEPT
	sudo iptables -F
	sudo iptables -A INPUT -i lo -j ACCEPT
	sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
	sudo iptables -A INPUT -p tcp --dport 2222 -j ACCEPT
	sudo iptables -A INPUT -p tcp --dport 443 -j ACCEPT
	sudo iptables -A INPUT -j LOG
	sudo iptables -A FORWARD -j LOG
	sudo iptables -A INPUT -j DROP
	sudo iptables -P INPUT DROP
	sudo iptables -S

	su - root
	sudo iptables-save > /etc/iptables/rules.v4
	exit
	iptables-restore  < /etc/iptables/rules.v4
	ip6tables-restore < /etc/iptables/rules.v6
	systemctl stop    netfilter-persistent
	systemctl start   netfilter-persistent
	systemctl restart netfilter-persistent

18. Activate psad (DOS)

	sudo vim /etc/psad/psad.conf
		IPT_SYSLOG_FILE             /var/log/syslog;
		DANGER_LEVEL1               2;    ### Number of packets.
		DANGER_LEVEL2               5;
		DANGER_LEVEL3               10;
		DANGER_LEVEL4               1500;
		DANGER_LEVEL5               10000;
		PORT_RANGE_SCAN_THRESHOLD   1;
		AUTO_DETECT_JOURNALCTL      Y;
		ENABLE_SYSLOG_FILE          Y;
		IPT_WRITE_FWDATA            Y;
		IPT_SYSLOG_FILE             /var/log/syslog;
		ENABLE_AUTO_IDS             Y;
		AUTO_IDS_DANGER_LEVEL       1;
		AUTO_BLOCK_TIMEOUT          60;

	tail -f /var/log/syslog
	while true; do sudo psad -S; sudo iptables -S | grep PSAD ; sleep 2; done

	sudo psad --sig-update
	sudo service psad restart

	sudo psad -S

	ssh -p 222 -l juhani 10.13.200.134
	ssh -p 23 -l juhani 10.13.200.134

	sudo apt-get install iptables-persistent
	sudo iptables-save

19. Install Apache
		sudo apt install apache2
		sudo mkdir /var/www/rs1
		sudo chown -R $USER:$USER /var/www/rs1
		sudo chmod -R 755 /var/www/rs1
		cat <<EOF > /var/www/rs1/index.html
<!DOCUMENT HTML>
<html>
  <head>
    <title>Roger skyline 1 (Hive Helsinki Project)!</title>
  </head>
  <style>
    h1 {color: red;}
  </style>
  <body>
    <h1 id="myText">A simple web page for "Roger Skyline 1" project.</h1>
    <button onclick="displayResult()">Click to change my colour!</button>
    <script>
      text=0;
      function displayResult()
      {
        if (text == 0)
	{
          var id = document.getElementById("myText");
          id.innerHTML = "Jee..., you did it!";
          id.style["color"] = "blue";
          text = 1;
        }
        else
	{
          var id = document.getElementById("myText");
          id.innerHTML = "Jee..., you did it once again!";
          id.style["color"] = "green";
          text = 0;
        }
      }
    </script>
  </body>
</html>
EOF

		cp /etc/apache2/ports.conf
			# Listen 80


		sudo cp /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-available/rs1.conf
		sudo nano /etc/apache2/sites-available/rs1.conf
		                ServerName rs1
				DocumentRoot /var/www/rs1
		sudo a2ensite rs1.conf
		sudo a2enmod ssl

		sudo a2dissite 000-default.conf

		sudo apache2ctl configtest

		sudo systemctl restart apache2

		https://10.13.200.134/


20. Activate fail2ban

	sudo vim /etc/fail2ban/jail.local
		[apache-hive]
		enabled  = true
		filter   = apache-hive
		action   = iptables-multiport[name=apache-hive, port="http,https"]
		logpath  = /var/log/apache2/access.log
		bantime  = 60
		maxretry = 3

		[sshd]
		port    = 2222
		bantime  = 60
		maxretry = 3

	systemctl restart fail2ban

	tail -f /var/log/fail2ban.log
	tail -f /var/log/auth.log


Logfiles.


Apache2:
	tail -f 






21. Install portsentry

	sudo apt-get install portsentry

	cat /etc/default/portsentry
		TCP_MODE="tcp"
		UDP_MODE="udp"

	systemctl restart portsentry

	sudo nmap -PN -sS 10.13.200.134


22. Check services
	apt search "docker" | grep -i installed
	apt search "vagrant" | grep -i installed
	apt search "traefik" | grep -i installed
	service --status-all | egrep " + "
	service --status-all | egrep " - "


23. Install Ansible

	sudo -E apt-add-repository ppa:ansible/ansible
	sudo apt update
	sudo apt install ansible
	sudo apt-get install python-apt
	sudo vim /etc/ansible/ansible.cfg
		remote_port    = 2222


	ansible-playbook --ask-become-pass roger_skyline_1/VI_2/Install_Apache2.yml




sudo openssl req -x509 -nodes -days 365 -newkey rsa:4096 -subj /C=FI/ST=75/L=Espoo/O=rs1/OU=rs1/CN=RS1/emailAddress=jkauppi@student.hive.fi -keyout /etc/ssl/private/rs1_selfsigned.key -out /etc/ssl/certs/rs1_selfsigned.crt
sudo openssl dhparam -dsaparam -out /etc/ssl/certs/rs1.pem 4096


